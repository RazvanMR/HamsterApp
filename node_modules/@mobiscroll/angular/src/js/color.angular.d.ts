import { EventEmitter, ElementRef, NgZone, ViewContainerRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { MbscFrameBase, MbscInputService, MbscOptionsService } from './frameworks/angular';
import { Color, MbscColorOptions } from './classes/color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './frameworks/angular';
import * as ɵngcc3 from './input.angular';
export { MbscColorOptions };
export declare class MbscColor extends MbscFrameBase {
    optionService: MbscOptionsService;
    instance: Color;
    clear: boolean;
    data: Array<string | {
        color: string;
    }>;
    defaultValue: string;
    enhance: boolean;
    format: 'hex' | 'rgb' | 'hsl';
    inputClass: string;
    mode: 'preset' | 'refine';
    navigation: 'horizontal' | 'vertical';
    preview: boolean;
    previewText: boolean;
    rows: number;
    valueText: string;
    select: 'single' | 'multiple' | number;
    onSet: EventEmitter<{
        valueText: string;
        inst: any;
    }>;
    onClear: EventEmitter<{
        inst: any;
    }>;
    onItemTap: EventEmitter<{
        target: HTMLElement;
        selected: boolean;
        index: number;
        value: string;
        inst: Color;
    }>;
    onPreviewItemTap: EventEmitter<{
        target: HTMLElement;
        index: number;
        value: string;
        inst: Color;
    }>;
    options: MbscColorOptions;
    value: any;
    onChangeEmitter: EventEmitter<any>;
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);
    refreshData(newData: any): void;
    initControl(): void;
    isMulti: boolean;
    setNewValue(v: any): void;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscColor, [null, null, { optional: true; }, { optional: true; }, { optional: true; }, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscColor, "[mbsc-color]", ["mobiscroll"], { "value": "mbsc-color"; "clear": "clear"; "data": "mbsc-data"; "defaultValue": "defaultValue"; "enhance": "enhance"; "format": "format"; "inputClass": "inputClass"; "mode": "mode"; "navigation": "navigation"; "preview": "preview"; "previewText": "previewText"; "rows": "rows"; "valueText": "valueText"; "select": "select"; "options": "mbsc-options"; }, { "onSet": "onSet"; "onClear": "onClear"; "onItemTap": "onItemTap"; "onPreviewItemTap": "onPreviewItemTap"; "onChangeEmitter": "mbsc-colorChange"; }, never>;
}
export declare class MbscColorComponent extends MbscColor {
    inputIcon: string;
    iconAlign: 'left' | 'right';
    name: string;
    error: boolean;
    errorMessage: string;
    options: MbscColorOptions;
    placeholder: string;
    data: Array<string | {
        color: string;
    }>;
    enhance: boolean;
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscColorComponent, [null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscColorComponent, "mbsc-color", ["mobiscroll"], { "inputIcon": "icon"; "iconAlign": "icon-align"; "name": "name"; "error": "error"; "errorMessage": "errorMessage"; "options": "options"; "placeholder": "placeholder"; "data": "data"; "enhance": "enhance"; }, {}, never, ["*"]>;
}
export declare class MbscColorModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MbscColorModule, [typeof MbscColor, typeof MbscColorComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.MbscFrameBaseModule, typeof ɵngcc3.MbscInputModule], [typeof MbscColor, typeof MbscColorComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MbscColorModule>;
}

//# sourceMappingURL=color.angular.d.ts.map