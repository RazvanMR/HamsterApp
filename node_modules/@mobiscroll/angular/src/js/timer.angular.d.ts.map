{"version":3,"file":"timer.angular.d.ts","sources":["timer.angular.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ElementRef, NgZone, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MbscScrollerBase, MbscInputService, MbscOptionsService } from './frameworks/angular';\nimport { Timer, MbscTimerOptions } from './presets/timer';\nexport { MbscTimerOptions };\nexport declare class MbscTimer extends MbscScrollerBase {\n    optionService: MbscOptionsService;\n    instance: Timer;\n    autostart: boolean;\n    maxWheel: 'years' | 'months' | 'days' | 'hours' | 'minutes' | 'seconds' | 'fract';\n    mode: 'countdown' | 'stopwatch';\n    step: number;\n    targetTime: number;\n    useShortLabels: boolean;\n    hideText: string;\n    labels: Array<string>;\n    labelsShort: Array<string>;\n    lapText: string;\n    resetText: string;\n    startText: string;\n    stopText: string;\n    onLap: EventEmitter<{\n        ellapsed: number;\n        lap: number;\n        laps: Array<number>;\n        inst: any;\n    }>;\n    onFinish: EventEmitter<{\n        time: number;\n        inst: any;\n    }>;\n    onReset: EventEmitter<{\n        inst: any;\n    }>;\n    onStart: EventEmitter<{\n        inst: any;\n    }>;\n    onStop: EventEmitter<{\n        ellapsed: number;\n        inst: any;\n    }>;\n    options: MbscTimerOptions;\n    value: any;\n    onChangeEmitter: EventEmitter<any>;\n    constructor(initialElement: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);\n    setNewValue(v: any): void;\n    protected handleChange(): void;\n    initControl(): void;\n}\nexport declare class MbscTimerComponent extends MbscTimer {\n    inputIcon: string;\n    iconAlign: 'left' | 'right';\n    name: string;\n    error: boolean;\n    errorMessage: string;\n    options: MbscTimerOptions;\n    placeholder: string;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);\n    ngAfterViewInit(): void;\n}\nexport declare class MbscTimerModule {\n}\n"]}