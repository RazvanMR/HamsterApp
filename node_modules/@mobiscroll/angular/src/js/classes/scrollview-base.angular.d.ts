import { EventEmitter, ElementRef, NgZone, AfterViewInit, OnDestroy } from '@angular/core';
import { MbscBase, Observable } from '../frameworks/angular';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../frameworks/angular';
export declare class MbscNotifyItemService {
    private _instanceObservable;
    private _addRemoveObservable;
    inst: any;
    notifyInstanceReady(instance: any): void;
    notifyAddRemove(item: any): void;
    onInstanceReady(): Observable<any>;
    onAddRemove(): Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscNotifyItemService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<MbscNotifyItemService>;
}
export declare class MbscScrollItemBase implements AfterViewInit, OnDestroy {
    notifyItemService: MbscNotifyItemService;
    _elem: ElementRef;
    id: string;
    _instance: any;
    readonly nativeElement: any;
    instanceObserver: number;
    constructor(notifyItemService: MbscNotifyItemService, _elem: ElementRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscScrollItemBase, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscScrollItemBase, "[mbsc-si-b", never, { "id": "id"; }, {}, never>;
}
export declare class MbscScrollViewBase extends MbscBase {
    notifyItemService: MbscNotifyItemService;
    context: string | HTMLElement;
    itemWidth: number;
    layout: 'liquid' | 'fixed' | number;
    mousewheel: boolean;
    snap: boolean;
    threshold: number;
    paging: boolean;
    onItemTap: EventEmitter<{
        target: HTMLElement;
        inst: any;
    }>;
    onMarkupReady: EventEmitter<{
        target: HTMLElement;
        inst: any;
    }>;
    onAnimationStart: EventEmitter<{
        inst: any;
    }>;
    onAnimationEnd: EventEmitter<{
        inst: any;
    }>;
    onMove: EventEmitter<{
        inst: any;
    }>;
    onGestureStart: EventEmitter<{
        inst: any;
    }>;
    onGestureEnd: EventEmitter<{
        inst: any;
    }>;
    constructor(initialElem: ElementRef, zone: NgZone, notifyItemService: MbscNotifyItemService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscScrollViewBase, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscScrollViewBase, "[mbsc-s-b", never, { "context": "context"; "itemWidth": "itemWidth"; "layout": "layout"; "mousewheel": "mousewheel"; "snap": "snap"; "threshold": "threshold"; "paging": "paging"; }, { "onItemTap": "onItemTap"; "onMarkupReady": "onMarkupReady"; "onAnimationStart": "onAnimationStart"; "onAnimationEnd": "onAnimationEnd"; "onMove": "onMove"; "onGestureStart": "onGestureStart"; "onGestureEnd": "onGestureEnd"; }, never>;
}
export declare class MbscScrollViewBaseModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MbscScrollViewBaseModule, [typeof MbscScrollItemBase, typeof MbscScrollViewBase], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.MbscBaseModule], never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MbscScrollViewBaseModule>;
}

//# sourceMappingURL=scrollview-base.angular.d.ts.map