import { EventEmitter, ElementRef, QueryList, NgZone } from '@angular/core';
import { NavigationBase, MbscNavBaseOptions } from './navigation-base';
import { MbscScrollViewBase, MbscScrollItemBase, MbscNotifyItemService } from './scrollview-base.angular';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './scrollview-base.angular';
export declare class MbscNavItemBase extends MbscScrollItemBase {
    _selected: boolean;
    private _disabled;
    icon: string;
    disabled: boolean;
    selected: boolean;
    selectedChange: EventEmitter<boolean>;
    constructor(notifyItemService: MbscNotifyItemService, elem: ElementRef);
    toggle(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscNavItemBase, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscNavItemBase, "[mbsc-ni-b", never, { "disabled": "disabled"; "selected": "selected"; "icon": "icon"; }, { "selectedChange": "selectedChange"; }, never>;
}
export declare class MbscNavigationBase extends MbscScrollViewBase {
    instance: NavigationBase;
    select: 'single' | 'multiple' | 'off';
    display: 'top' | 'bottom' | 'inline';
    options: MbscNavBaseOptions;
    items: QueryList<MbscNavItemBase>;
    constructor(initialElem: ElementRef, zone: NgZone, notifyItemService: MbscNotifyItemService);
    tapHandler(event: any, inst: any): void;
    private _getItem;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscNavigationBase, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscNavigationBase, "[mbsc-n-b", never, { "display": "display"; "options": "options"; }, {}, ["items"]>;
}
export declare class MbscNavigationBaseModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MbscNavigationBaseModule, [typeof MbscNavigationBase, typeof MbscNavItemBase], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.MbscScrollViewBaseModule], never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MbscNavigationBaseModule>;
}

//# sourceMappingURL=navigation-base.angular.d.ts.map