import { AfterViewInit, EventEmitter, ElementRef, NgZone, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { MbscScrollerBase, MbscInputService, MbscListService, MbscOptionsService } from './frameworks/angular';
import { ImageScroller, MbscImageOptions } from './presets/image';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './frameworks/angular';
import * as ɵngcc3 from './input.angular';
export { MbscImageOptions };
export declare class MbscImage extends MbscScrollerBase implements OnInit {
    optionService: MbscOptionsService;
    instance: ImageScroller;
    defaultValue: Array<number>;
    enhance: boolean;
    inputClass: string;
    invalid: Array<any>;
    labels: Array<string>;
    placeholder: string;
    showInput: boolean;
    wheelArray: Array<any>;
    options: MbscImageOptions;
    target: any;
    value: string;
    onChangeEmitter: EventEmitter<string>;
    constructor(initialElement: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);
    initControl(): void;
    setNewValue(v: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscImage, [null, null, { optional: true; }, { optional: true; }, { optional: true; }, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscImage, "[mbsc-image]", ["mobiscroll"], { "value": "mbsc-image"; "defaultValue": "defaultValue"; "enhance": "enhance"; "inputClass": "inputClass"; "invalid": "invalid"; "labels": "labels"; "placeholder": "placeholder"; "showInput": "showInput"; "wheelArray": "mbsc-data"; "options": "mbsc-options"; "target": "mbsc-target"; }, { "onChangeEmitter": "mbsc-imageChange"; }, never>;
}
export declare class MbscImageComponent extends MbscImage implements OnInit {
    listService: MbscListService;
    inputIcon: string;
    iconAlign: 'left' | 'right';
    name: string;
    error: boolean;
    errorMessage: string;
    options: MbscImageOptions;
    wheelArray: Array<any>;
    label: string;
    placeholder: string;
    itemWrapper: ElementRef;
    showInput: boolean;
    inlineOptionsObj: {
        itemSelector: string;
        showInput: boolean;
    };
    addRemoveHandler: number;
    setElement(): void;
    constructor(initialElem: ElementRef, zone: NgZone, listService: MbscListService, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    initControl(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscImageComponent, [null, null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscImageComponent, "mbsc-image", ["mobiscroll"], { "inputIcon": "icon"; "iconAlign": "icon-align"; "name": "name"; "error": "error"; "errorMessage": "errorMessage"; "options": "options"; "wheelArray": "data"; "label": "label"; "placeholder": "placeholder"; "showInput": "showInput"; }, {}, never, ["*"]>;
}
export declare class MbscImageItem implements AfterViewInit, OnDestroy {
    listService: MbscListService;
    value: string | number;
    icon: string;
    constructor(listService: MbscListService);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscImageItem, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscImageItem, "mbsc-image-item", never, { "value": "value"; "icon": "icon"; }, {}, never, ["*"]>;
}
export declare class MbscImageModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MbscImageModule, [typeof MbscImage, typeof MbscImageComponent, typeof MbscImageItem], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.MbscScrollerBaseModule, typeof ɵngcc3.MbscInputModule], [typeof MbscImage, typeof MbscImageComponent, typeof MbscImageItem]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MbscImageModule>;
}

//# sourceMappingURL=image.angular.d.ts.map