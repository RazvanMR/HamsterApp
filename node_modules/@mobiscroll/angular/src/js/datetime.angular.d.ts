import { EventEmitter, ElementRef, NgZone, ViewContainerRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { MbscInputService, MbscOptionsService } from './frameworks/angular';
import { DateTime } from './presets/datetime';
import { MbscDatetimeOptions } from './presets/datetimebase';
import { MbscDatetimeBase } from './classes/datetimebase.angular';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './classes/datetimebase.angular';
import * as ɵngcc3 from './input.angular';
export { MbscDatetimeOptions };
export declare class MbscDateBase extends MbscDatetimeBase {
    optionService: MbscOptionsService;
    instance: DateTime;
    options: MbscDatetimeOptions;
    protected preset: string;
    value: Date;
    onChangeEmitter: EventEmitter<Date>;
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);
    setNewValue(v: any): void;
    initControl(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscDateBase, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscDateBase, "[mbsc-dt-b]", never, { "value": "mbsc-date"; "options": "mbsc-options"; }, { "onChangeEmitter": "mbsc-dateChange"; }, never>;
}
export declare class MbscDate extends MbscDateBase {
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscDate, [null, null, { optional: true; }, { optional: true; }, { optional: true; }, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscDate, "[mbsc-date]", ["mobiscroll"], {}, {}, never>;
}
export declare class MbscDateComponent extends MbscDate {
    inputIcon: string;
    iconAlign: 'left' | 'right';
    name: string;
    error: boolean;
    errorMessage: string;
    options: MbscDatetimeOptions;
    placeholder: string;
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscDateComponent, [null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscDateComponent, "mbsc-date", ["mobiscroll"], { "inputIcon": "icon"; "iconAlign": "icon-align"; "name": "name"; "error": "error"; "errorMessage": "errorMessage"; "options": "options"; "placeholder": "placeholder"; }, {}, never, ["*"]>;
}
export declare class MbscTime extends MbscDateBase {
    value: Date;
    onChangeEmitter: EventEmitter<Date>;
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscTime, [null, null, { optional: true; }, { optional: true; }, { optional: true; }, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscTime, "[mbsc-time]", ["mobiscroll"], { "value": "mbsc-time"; }, { "onChangeEmitter": "mbsc-timeChange"; }, never>;
}
export declare class MbscTimeComponent extends MbscTime {
    inputIcon: string;
    iconAlign: 'left' | 'right';
    name: string;
    error: boolean;
    errorMessage: string;
    options: MbscDatetimeOptions;
    placeholder: string;
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscTimeComponent, [null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscTimeComponent, "mbsc-time", ["mobiscroll"], { "inputIcon": "icon"; "iconAlign": "icon-align"; "name": "name"; "error": "error"; "errorMessage": "errorMessage"; "options": "options"; "placeholder": "placeholder"; }, {}, never, ["*"]>;
}
export declare class MbscDatetime extends MbscDateBase {
    value: Date;
    onChangeEmitter: EventEmitter<Date>;
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscDatetime, [null, null, { optional: true; }, { optional: true; }, { optional: true; }, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscDatetime, "[mbsc-datetime]", ["mobiscroll"], { "value": "mbsc-datetime"; }, { "onChangeEmitter": "mbsc-datetimeChange"; }, never>;
}
export declare class MbscDatetimeComponent extends MbscDatetime {
    inputIcon: string;
    iconAlign: 'left' | 'right';
    name: string;
    error: boolean;
    errorMessage: string;
    options: MbscDatetimeOptions;
    placeholder: string;
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscDatetimeComponent, [null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscDatetimeComponent, "mbsc-datetime", ["mobiscroll"], { "inputIcon": "icon"; "iconAlign": "icon-align"; "name": "name"; "error": "error"; "errorMessage": "errorMessage"; "options": "options"; "placeholder": "placeholder"; }, {}, never, ["*"]>;
}
export declare class MbscDatetimeModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MbscDatetimeModule, [typeof MbscDateBase, typeof MbscDate, typeof MbscDateComponent, typeof MbscTime, typeof MbscTimeComponent, typeof MbscDatetime, typeof MbscDatetimeComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.MbscDatetimeBaseModule, typeof ɵngcc3.MbscInputModule], [typeof MbscDateBase, typeof MbscDate, typeof MbscDateComponent, typeof MbscTime, typeof MbscTimeComponent, typeof MbscDatetime, typeof MbscDatetimeComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MbscDatetimeModule>;
}

//# sourceMappingURL=datetime.angular.d.ts.map