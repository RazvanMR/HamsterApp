import { EventEmitter, ElementRef, NgZone, OnInit, ViewContainerRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { MbscInputService, MbscOptionsService } from './frameworks/angular';
import { Calendar, MbscCalendarOptions } from './presets/calendar';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './classes/calbase.angular';
import * as ɵngcc3 from './input.angular';
export { MbscCalendarOptions };
import { MbscCalBase } from './classes/calbase.angular';
export declare class MbscCalendar extends MbscCalBase implements OnInit {
    optionService: MbscOptionsService;
    instance: Calendar;
    controls: Array<'time' | 'date' | 'calendar'>;
    firstSelectDay: number;
    selectType: 'day' | 'week';
    select: 'single' | 'multiple' | number;
    setOnDayTap: boolean;
    onSetDate: EventEmitter<{
        date: Date;
        control?: 'calendar' | 'date' | 'time';
        inst: any;
    }>;
    onCellHoverIn: EventEmitter<{
        date: Date;
        marked?: any;
        selected?: 'start' | 'end';
        target: HTMLElement;
        inst: any;
    }>;
    onCellHoverOut: EventEmitter<{
        date: Date;
        marked?: any;
        selected?: 'start' | 'end';
        target: HTMLElement;
        inst: any;
    }>;
    onDayChange: EventEmitter<{
        date: Date;
        marked?: any;
        selected?: 'start' | 'end';
        target: HTMLElement;
        inst: any;
    }>;
    options: MbscCalendarOptions;
    private isMulti;
    value: any;
    onChangeEmitter: EventEmitter<any>;
    constructor(initialElement: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);
    setNewValue(v: any): void;
    initControl(): void;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscCalendar, [null, null, { optional: true; }, { optional: true; }, { optional: true; }, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MbscCalendar, "[mbsc-calendar]", ["mobiscroll"], { "value": "mbsc-calendar"; "controls": "controls"; "firstSelectDay": "firstSelectDay"; "selectType": "selectType"; "select": "select"; "setOnDayTap": "setOnDayTap"; "options": "mbsc-options"; }, { "onSetDate": "onSetDate"; "onCellHoverIn": "onCellHoverIn"; "onCellHoverOut": "onCellHoverOut"; "onDayChange": "onDayChange"; "onChangeEmitter": "mbsc-calendarChange"; }, never>;
}
export declare class MbscCalendarComponent extends MbscCalendar {
    inputIcon: string;
    iconAlign: 'left' | 'right';
    name: string;
    placeholder: string;
    error: boolean;
    errorMessage: string;
    options: MbscCalendarOptions;
    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscCalendarComponent, [null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscCalendarComponent, "mbsc-calendar", ["mobiscroll"], { "inputIcon": "icon"; "iconAlign": "icon-align"; "name": "name"; "placeholder": "placeholder"; "error": "error"; "errorMessage": "errorMessage"; "options": "options"; }, {}, never, ["*"]>;
}
export declare class MbscCalendarModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MbscCalendarModule, [typeof MbscCalendar, typeof MbscCalendarComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.MbscCalBaseModule, typeof ɵngcc3.MbscInputModule], [typeof MbscCalendar, typeof MbscCalendarComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MbscCalendarModule>;
}

//# sourceMappingURL=calendar.angular.d.ts.map