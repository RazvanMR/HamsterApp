{"version":3,"file":"input.angular.d.ts","sources":["input.angular.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter, ElementRef, NgZone } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MbscOptionsService, MbscInputService, MbscBase } from './frameworks/angular';\nimport { Input as FormInput, MbscFormOptions } from './classes/input';\nexport declare class MbscFormBase extends MbscBase implements OnInit {\n    protected _formService: MbscOptionsService;\n    protected _inheritedOptions: any;\n    color: string;\n    options: MbscFormOptions;\n    disabled: boolean;\n    name: string;\n    _initElem: ElementRef;\n    constructor(hostElem: ElementRef, _formService: MbscOptionsService, zone: NgZone);\n    ngOnInit(): void;\n}\nexport declare class MbscFormValueBase extends MbscFormBase implements ControlValueAccessor {\n    protected _control: NgControl;\n    _value: any;\n    _readonly: boolean;\n    _needRefresh: any;\n    readonly: any;\n    innerValue: any;\n    onChange: (value: any) => any;\n    onTouch: (ev?: any) => any;\n    value: any;\n    error: boolean;\n    errorMessage: string;\n    valueChangeEmitter: EventEmitter<string>;\n    constructor(hostElem: ElementRef, _formService: MbscOptionsService, _inputService: MbscInputService, _control: NgControl, zone: NgZone);\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    writeValue(v: any): void;\n    refresh(): void;\n    ngAfterViewInit(): void;\n}\nexport declare class MbscInputBase extends MbscFormValueBase {\n    autocomplete: 'on' | 'off';\n    autocapitalize: string;\n    autocorrect: string;\n    spellcheck: string;\n    autofocus: string;\n    minlength: number;\n    maxlength: number;\n    required: string;\n    icon: string;\n    iconAlign: string;\n    type: string;\n    passwordToggle: boolean;\n    iconShow: string;\n    iconHide: string;\n    iconUpload: boolean;\n    inputStyle: string;\n    labelStyle: string;\n    placeholder: string;\n    constructor(initialElem: ElementRef, _formService: MbscOptionsService, _inputService: MbscInputService, _control: NgControl, zone: NgZone);\n}\nexport declare class MbscInput extends MbscInputBase {\n    protected _inputService: MbscInputService;\n    instance: FormInput;\n    min: number;\n    max: number;\n    step: number;\n    pattern: string;\n    accept: string;\n    multiple: string;\n    controlNg: boolean;\n    dropdown: boolean;\n    constructor(initialElem: ElementRef, _formService: MbscOptionsService, _inputService: MbscInputService, _control: NgControl, zone: NgZone);\n    initControl(): void;\n}\nexport declare class MbscInputModule {\n}\n"]}