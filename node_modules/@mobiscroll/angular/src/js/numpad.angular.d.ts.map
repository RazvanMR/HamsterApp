{"version":3,"file":"numpad.angular.d.ts","sources":["numpad.angular.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ElementRef, NgZone, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MbscFrameBase, MbscInputService, MbscOptionsService } from './frameworks/angular';\nimport { Numpad, MbscNumpadOptions, MbscNumpadDateOptions, MbscNumpadTimeOptions, MbscNumpadDecimalOptions, MbscNumpadTimespanOptions } from './classes/numpad';\nexport { MbscNumpadOptions, MbscNumpadDateOptions, MbscNumpadTimeOptions, MbscNumpadDecimalOptions, MbscNumpadTimespanOptions };\nexport declare class MbscNumpadBase extends MbscFrameBase {\n    optionService: MbscOptionsService;\n    instance: Numpad;\n    allowLeadingZero: boolean;\n    deleteIcon: string;\n    fill: 'ltr' | 'rtl';\n    leftKey: {\n        text: string;\n        variable?: string;\n        value?: string;\n        keys?: number[];\n    };\n    mask: string;\n    placeholderChar: string;\n    rightKey: {\n        text: string;\n        variable?: string;\n        value?: string;\n        keys?: number[];\n    };\n    template: string;\n    validate: (data: {\n        values: Array<any>;\n        variables: any;\n    }, inst: any) => ({\n        disabled: Array<any>;\n        invalid: boolean;\n    });\n    onSet: EventEmitter<{\n        valueText: string;\n        inst: any;\n    }>;\n    onClear: EventEmitter<{\n        inst: any;\n    }>;\n    onInput: EventEmitter<{\n        domEvent: any;\n        target: any;\n        values: Array<any>;\n        valueText: string;\n        variables: any;\n        inst: any;\n    }>;\n    cancelText: string;\n    clearText: string;\n    setText: string;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);\n}\nexport declare class MbscNumpad extends MbscNumpadBase {\n    options: MbscNumpadOptions;\n    protected preset: string;\n    value: any;\n    onChangeEmitter: EventEmitter<any>;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);\n    setNewValue(v: any): void;\n    initControl(): void;\n}\nexport declare class MbscNumpadComponent extends MbscNumpad {\n    inputIcon: string;\n    iconAlign: 'left' | 'right';\n    name: string;\n    error: boolean;\n    errorMessage: string;\n    options: MbscNumpadOptions;\n    placeholder: string;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);\n    ngAfterViewInit(): void;\n}\nexport declare class MbscNumpadDecimal extends MbscNumpad {\n    value: any;\n    decimalSeparator: string;\n    defaultValue: number;\n    entryMode: 'template' | 'freeform';\n    invalid: Array<any>;\n    scale: number;\n    maxScale: number;\n    min: number;\n    max: number;\n    prefix: string;\n    returnAffix: boolean;\n    suffix: string;\n    thousandsSeparator: string;\n    options: MbscNumpadDecimalOptions;\n    onChangeEmitter: EventEmitter<number>;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);\n}\nexport declare class MbscNumpadDecimalComponent extends MbscNumpadDecimal {\n    inputIcon: string;\n    iconAlign: 'left' | 'right';\n    name: string;\n    error: boolean;\n    errorMessage: string;\n    options: MbscNumpadDecimalOptions;\n    placeholder: string;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);\n    ngAfterViewInit(): void;\n}\nexport declare class MbscNumpadDate extends MbscNumpadBase {\n    value: Date | '';\n    dateFormat: string;\n    dateOrder: string;\n    delimiter: string;\n    defaultValue: string;\n    invalid: Array<any>;\n    min: Date;\n    max: Date;\n    options: MbscNumpadDateOptions;\n    onChangeEmitter: EventEmitter<Date>;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);\n    setNewValue(v: Date): void;\n    initControl(): void;\n}\nexport declare class MbscNumpadDateComponent extends MbscNumpadDate {\n    inputIcon: string;\n    iconAlign: 'left' | 'right';\n    name: string;\n    error: boolean;\n    errorMessage: string;\n    options: MbscNumpadDateOptions;\n    placeholder: string;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);\n    ngAfterViewInit(): void;\n}\nexport declare class MbscNumpadTime extends MbscNumpadBase {\n    value: string;\n    defaultValue: string;\n    invalid: Array<any>;\n    max: Date;\n    min: Date;\n    timeFormat: string;\n    options: MbscNumpadTimeOptions;\n    onChangeEmitter: EventEmitter<string>;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);\n    setNewValue(v: string): void;\n    initControl(): void;\n}\nexport declare class MbscNumpadTimeComponent extends MbscNumpadTime {\n    inputIcon: string;\n    iconAlign: 'left' | 'right';\n    name: string;\n    error: boolean;\n    errorMessage: string;\n    options: MbscNumpadTimeOptions;\n    placeholder: string;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);\n    ngAfterViewInit(): void;\n}\nexport declare class MbscNumpadTimespan extends MbscNumpad {\n    value: number | '';\n    defaultValue: number;\n    invalid: Array<any>;\n    min: number;\n    max: number;\n    options: MbscNumpadTimespanOptions;\n    onChangeEmitter: EventEmitter<number>;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);\n}\nexport declare class MbscNumpadTimespanComponent extends MbscNumpadTimespan {\n    inputIcon: string;\n    iconAlign: 'left' | 'right';\n    name: string;\n    error: boolean;\n    errorMessage: string;\n    options: MbscNumpadTimespanOptions;\n    placeholder: string;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);\n    ngAfterViewInit(): void;\n}\nexport declare class MbscNumpadModule {\n}\n"]}