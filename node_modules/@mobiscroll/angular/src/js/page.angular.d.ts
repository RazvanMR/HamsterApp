import { ElementRef, NgZone, OnInit } from '@angular/core';
import { MbscBase, MbscOptionsService } from './frameworks/angular';
import { Page, MbscPageOptions } from './classes/page';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './frameworks/angular';
export { MbscPageOptions };
export declare class MbscPage extends MbscBase implements OnInit {
    optionsService: MbscOptionsService;
    instance: Page;
    options: MbscPageOptions;
    context: string | HTMLElement;
    initElem: ElementRef;
    constructor(hostElement: ElementRef, optionsService: MbscOptionsService, zone: NgZone);
    ngOnInit(): void;
    initControl(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscPage, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscPage, "mbsc-page", ["mobiscroll"], { "options": "options"; "context": "context"; }, {}, never, ["*"]>;
}
export declare class MbscNote {
    initialElem: ElementRef;
    readonly classNames: string;
    color: string;
    constructor(initialElem: ElementRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscNote, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscNote, "mbsc-note", never, { "color": "color"; }, {}, never, ["*"]>;
}
export declare class MbscAvatar {
    draggable: boolean;
    src: string;
    alt: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MbscAvatar, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MbscAvatar, "mbsc-avatar", never, { "draggable": "draggable"; "src": "src"; "alt": "alt"; }, {}, never, never>;
}
export declare class MbscPageModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MbscPageModule, [typeof MbscPage, typeof MbscNote, typeof MbscAvatar], [typeof ɵngcc1.MbscBaseModule], [typeof MbscPage, typeof MbscNote, typeof MbscAvatar]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MbscPageModule>;
}

//# sourceMappingURL=page.angular.d.ts.map