{"version":3,"file":"range.angular.d.ts","sources":["range.angular.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, ElementRef, NgZone, ViewContainerRef } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MbscInputService, MbscOptionsService } from './frameworks/angular';\nimport { RangePicker, MbscRangeOptions } from './presets/range';\nimport { MbscCalBase } from './classes/calbase.angular';\nexport { MbscRangeOptions };\nexport declare class MbscRangeStartComponent implements ControlValueAccessor {\n    host: ElementRef;\n    parent: MbscRangeComponent;\n    zone: NgZone;\n    control: NgControl;\n    theme: string;\n    inputIcon: string;\n    iconAlign: 'left' | 'right';\n    name: string;\n    error: boolean;\n    errorMessage: string;\n    disabled: boolean;\n    placeholder: string;\n    readonly element: any;\n    rangeIndex: 0 | 1;\n    oldAccessor: any;\n    constructor(host: ElementRef, parent: MbscRangeComponent, zone: NgZone, control: NgControl);\n    checkAccessor(): void;\n    handleChange(): void;\n    ngAfterViewInit(): void;\n    onChange: any;\n    onTouch: any;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    initialSet: boolean;\n    writeValue(v: any): void;\n}\nexport declare class MbscRangeEndComponent extends MbscRangeStartComponent {\n    rangeIndex: 0 | 1;\n    constructor(el: ElementRef, parent: MbscRangeComponent, zone: NgZone, control: NgControl);\n}\nexport declare class MbscRange extends MbscCalBase {\n    optionService: MbscOptionsService;\n    _wrapper: boolean;\n    instance: RangePicker;\n    _startInput: string | HTMLElement;\n    _endInput: string | HTMLElement;\n    autoCorrect: boolean;\n    controls?: Array<'time' | 'date' | 'calendar'>;\n    endInput: string | HTMLElement;\n    maxRange: number;\n    minRange: number;\n    showSelector: boolean;\n    startInput: string | HTMLElement;\n    fromText: string;\n    toText: string;\n    onSetDate: EventEmitter<{\n        date: Date;\n        active: 'start' | 'end';\n        control: 'calendar' | 'date' | 'time';\n        inst: any;\n    }>;\n    onCellHoverIn: EventEmitter<{\n        date: Date;\n        marked?: any;\n        selected?: 'start' | 'end';\n        target: HTMLElement;\n        inst: any;\n    }>;\n    onCellHoverOut: EventEmitter<{\n        date: Date;\n        marked?: any;\n        selected?: 'start' | 'end';\n        target: HTMLElement;\n        inst: any;\n    }>;\n    onDayChange: EventEmitter<{\n        date: Date;\n        marked?: any;\n        selected?: 'start' | 'end';\n        target: HTMLElement;\n        inst: any;\n    }>;\n    start: MbscRangeStartComponent;\n    end: MbscRangeEndComponent;\n    options: MbscRangeOptions;\n    value: Array<any>;\n    onChangeEmitter: EventEmitter<Array<any>>;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);\n    setNewValue(v: Array<any>): void;\n    readonly optionExtensions: any;\n    initControl(): void;\n    ngAfterContentInit(): void;\n    handleChange(): void;\n}\nexport declare class MbscRangeComponent extends MbscRange {\n    inputIcon: string;\n    iconAlign: 'left' | 'right';\n    name: string;\n    error: boolean;\n    errorMessage: string;\n    options: MbscRangeOptions;\n    placeholder: string;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);\n    ngAfterViewInit(): void;\n}\nexport declare class MbscRangeModule {\n}\n"]}