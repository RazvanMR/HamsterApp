{"version":3,"file":"select.angular.d.ts","sources":["select.angular.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ElementRef, NgZone, OnInit, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MbscScrollerBase, MbscInputService, MbscOptionsService } from './frameworks/angular';\nimport { Select, MbscSelectOptions } from './presets/select';\nexport { MbscSelectOptions };\nexport declare class MbscSelect extends MbscScrollerBase implements OnInit {\n    optionService: MbscOptionsService;\n    instance: Select;\n    counter: boolean;\n    data: Array<{\n        text?: string;\n        value?: any;\n        group?: string;\n        html?: string;\n        disabled?: boolean;\n    }> | {\n        url: string;\n        dataField?: string;\n        dataType?: 'json' | 'jsonp';\n        processResponse?: (data: any) => Array<{\n            text?: string;\n            value?: any;\n            group?: string;\n            html?: string;\n            disabled?: boolean;\n        }>;\n        remoteFilter?: boolean;\n    };\n    dataText: string;\n    dataGroup: string;\n    dataValue: string;\n    filter: boolean;\n    filterPlaceholderText: string;\n    filterEmptyText: string;\n    group: boolean | {\n        header?: boolean;\n        groupedWheel?: boolean;\n        clustered?: boolean;\n    };\n    groupLabel: string;\n    inputClass: string;\n    invalid: Array<any>;\n    label: string;\n    placeholder: string;\n    select: 'single' | 'multiple' | number;\n    showInput: boolean;\n    onFilter: EventEmitter<{\n        filterText: string;\n        inst: Select;\n    }>;\n    options: MbscSelectOptions;\n    target: any;\n    value: any;\n    onChangeEmitter: EventEmitter<any>;\n    constructor(initialElement: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService, view: ViewContainerRef);\n    refreshData(newData: any): void;\n    initControl(): void;\n    protected setElement(): void;\n    isMulti: boolean;\n    ngOnInit(): void;\n    setNewValue(v: any): void;\n}\nexport declare class MbscSelectComponent extends MbscSelect {\n    inputIcon: string;\n    iconAlign: 'left' | 'right';\n    name: string;\n    error: boolean;\n    errorMessage: string;\n    options: MbscSelectOptions;\n    data: Array<{\n        text?: string;\n        value?: any;\n        group?: string;\n        html?: string;\n        disabled?: boolean;\n    }> | {\n        url: string;\n        dataField?: string;\n        dataType?: 'json' | 'jsonp';\n        processResponse?: (data: any) => Array<{\n            text?: string;\n            value?: any;\n            group?: string;\n            html?: string;\n            disabled?: boolean;\n        }>;\n        remoteFilter?: boolean;\n    };\n    dropdown: boolean;\n    placeholder: string;\n    constructor(initialElem: ElementRef, zone: NgZone, control: NgControl, inputService: MbscInputService, optionService: MbscOptionsService);\n    ngAfterViewInit(): void;\n    ngOnInit(): void;\n}\nexport declare class MbscSelectModule {\n}\n"]}